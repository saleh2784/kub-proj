# 10. Update the deployment with the wrong image version 1.100 and verify something is wrong with the deployment

kubectl set image deployment/webapp  nginx=myimage:1.100

# a. Expect: kubectl get pods (ImagePullErr) 
kubectl get pods 
kubectl get deployments
kubectl get pods > error.txt

# b. Undo the deployment with the previous version and verify everything is Ok 

kubectl rollout undo deployment webapp --to-revision=3
## or
kubectl rollout undo deployment webapp

# verify
kubectl get pods > status.txt

c. kubectl rollout history deploy webapp --revision=7 

kubectl rollout history deploy webapp --revision=7 > rev-7.txt

d. Check the history of the specific revision of that deployment 

kubectl rollout history deploy webapp --revision=8 > rev-8.txt

e. update the deployment with the image version latest and check the history and verify nothing is going on

kubectl set image deployment webapp  nginx=myimage:latest

k get pods > latest.txt

# 11. Apply the autoscaling to this deployment with 
minimum 10 and maximum 20 replicas and target CPU of 85% 
and verify hpa is created and replicas are increased to 10 from 1

kubectl autoscale deployment webapp --cpu-percent=85 --min=10 --max=20

kubectl get hpa > hpa.txt


# 13. Clean the cluster by deleting deployment and hpa you just created

kubectl delete deployment webapp
kubectl delete hpa webapp

